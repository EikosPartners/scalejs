{"version":3,"sources":["../src/scalejs.base.log.js"],"names":["log","Function","prototype","call","bind","console","IE","navigator","userAgent","indexOf","create","level","args","outstring","Array","slice","arguments","unshift","forEach","arg","stringify","apply","formatException","ex","stack","String","message","info","error","warn","debug"],"mappings":";;;;;;AAOA;;;;;;AAGI;AACA;;AAEA;AACA;;;;;;;;AAQA,IAAIA,MAAMC,SAASC,SAAT,CAAmBC,IAAnB,CAAwBC,IAAxB,CAA6BC,QAAQ,KAAR,CAA7B,EAA6CA,OAA7C,CAAV;;;AAGA;;;;;;;;;;;;AAYIC,KAAKC,UAAUC,SAAV,CAAoBC,OAApB,CAA4B,MAA5B,IAAsC,CAAtC,IACAF,UAAUC,SAAV,CAAoBC,OAApB,CAA4B,SAA5B,IAAyC,CAhBlD;;AAkBA;;AAEA;;;;;;;;AA1CJ;;;;;;AAMA;AA4CI,SAASC,MAAT,CAAiBC,KAAjB,EAAwB;AACpB,WAAO,YAAW;AACd,YAAIC,IAAJ,EAAUC,SAAV;;AAEAD,eAAOE,MAAMZ,SAAN,CAAgBa,KAAhB,CAAsBZ,IAAtB,CAA2Ba,SAA3B,EAAsC,CAAtC,CAAP;;AAEA,YAAI,CAACV,EAAL,EAAS;AACLM,iBAAKK,OAAL,CAAaN,KAAb;AAEH,SAHD,MAGO;AACHE,wBAAYF,QAAQ,GAApB;AACAC,iBAAKM,OAAL,CAAa,UAASC,GAAT,EAAa;AACtBN,6BAAa,sBAAOO,SAAP,CAAiBD,GAAjB,IAAwB,GAArC;AACH,aAFD;AAGAP,mBAAO,CAACC,SAAD,CAAP;AACH;;AAEDb,YAAIqB,KAAJ,CAAU,IAAV,EAAgBL,SAAhB;AACH,KAjBD;AAkBH;;AAED;;;;;;;AAOA,SAASM,eAAT,CAA0BC,EAA1B,EAA8B;AAC1B,QAAIC,QAAWD,GAAGC,KAAJ,GAAaC,OAAOF,GAAGC,KAAV,CAAb,GAAgC,EAA9C;AAAA,QACIE,UAAUH,GAAGG,OAAH,IAAc,EAD5B;AAEA,WAAO,YAAYA,OAAZ,GAAsB,WAAtB,GAAoCF,KAA3C;AACH;;kBAEc;AACX;;;;;;AAMAxB,SAAOU,OAAO,QAAP,CAPI;AAQX;;;;;;AAMAiB,UAAOjB,OAAO,QAAP,CAdI;AAeX;;;;;;AAMAkB,WAAOlB,OAAO,QAAP,CArBI;AAsBX;;;;;;AAMAmB,UAAOnB,OAAO,QAAP,CA5BI;AA6BX;;;;;;AAMAoB,WAAOpB,OAAO,QAAP,CAnCI;AAoCX;AACAY,qBAAiBA;AArCN,C","file":"scalejs.base.log.js","sourcesContent":["/**\r\n * Provides logging functionality to scalejs base\r\n * @namespace scalejs.base\r\n * @module log\r\n */\r\n\r\n/*global define,console,navigator*/\r\nimport object from './scalejs.base.object';\r\n    \r\n\r\n    // Workaround for IE8 and IE9 - in these browsers console.log exists but it's not a real JS function.\r\n    // See http://stackoverflow.com/a/5539378/201958 for more details\r\n\r\n    /*jslint sub:true*/\r\n    /**\r\n     * Aliases the built in console log function for IE support\r\n     *\r\n     * @property log\r\n     * @type Function\r\n     * @memberOf log\r\n     * @private\r\n     */\r\n    var log = Function.prototype.call.bind(console['log'], console),\r\n\r\n\r\n    /**\r\n     * Detects if the current browser is IE\r\n     *\r\n     * IMPORTANT: the method for obtaining this information is\r\n     *            subject to change and this functionality may\r\n     *            break at any time\r\n     *\r\n     * @property IE\r\n     * @type Boolean\r\n     * @memberOf log\r\n     * @private\r\n     */\r\n        IE = navigator.userAgent.indexOf('MSIE') > 0 ||\r\n             navigator.userAgent.indexOf('Trident') > 0;\r\n\r\n    /*jslint sub:false*/\r\n\r\n    /**\r\n     * Creates a new log function with the passed level\r\n     * @private\r\n     *\r\n     * @param {String} level log level\r\n     * @memberOf log\r\n     * @return {Function} decorated log function\r\n     */\r\n    function create (level) {\r\n        return function() {\r\n            var args, outstring;\r\n\r\n            args = Array.prototype.slice.call(arguments, 0);\r\n\r\n            if (!IE) {\r\n                args.unshift(level);\r\n\r\n            } else {\r\n                outstring = level + ' ';\r\n                args.forEach(function(arg){\r\n                    outstring += object.stringify(arg) + ' ';\r\n                });\r\n                args = [outstring];\r\n            }\r\n\r\n            log.apply(this, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Formats an exception for better output\r\n     *\r\n     * @param {Object} ex exception object\r\n     * @memberOf log\r\n     * @return {String} formatted exception\r\n     */\r\n    function formatException (ex) {\r\n        var stack   = (ex.stack) ? String(ex.stack) : '',\r\n            message = ex.message || '';\r\n        return 'Error: ' + message + '\\nStack: ' + stack;\r\n    }\r\n\r\n    export default {\r\n        /**\r\n         * Logs to the console with no level\r\n         * @method log\r\n         * @param {Any} [message...] items to print to the console\r\n         * @memberOf log\r\n         */\r\n        log:   create('      '),\r\n        /**\r\n         * Logs to the console with info level\r\n         * @method info\r\n         * @param {Any} [message...] items to print to the console\r\n         * @memberOf log\r\n         */\r\n        info:  create('info: '),\r\n        /**\r\n         * Logs to the console with error level\r\n         * @method error\r\n         * @param {Any} [message...] items to print to the console\r\n         * @memberOf log\r\n         */\r\n        error: create('error:'),\r\n        /**\r\n         * Logs to the console with warn level\r\n         * @method warn\r\n         * @param {Any} [message...] items to print to the console\r\n         * @memberOf log\r\n         */\r\n        warn:  create('warn: '),\r\n        /**\r\n         * Logs to the console with debug level\r\n         * @method debug\r\n         * @param {Any} [message...] items to print to the console\r\n         * @memberOf log\r\n         */\r\n        debug: create('debug:'),\r\n        /** */\r\n        formatException: formatException\r\n    };\r\n\r\n\r\n"]}